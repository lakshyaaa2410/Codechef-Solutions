#include <bits/stdc++.h>
#define ll long long int
#define nline '\n'
#define MOD 1000000007
using namespace std;

void factors(int n)
{
    for (int i = 2; i * i <= n; i++)
    {
        if (n % i == 0)
        {
            cout << i << nline;
            if (n / i != i)
                cout << n / i << nline;
        }
    }
}
void primeFactorization(int n)
{
    for (int i = 2; i * i <= n; i++)
    {
        while (n % i == 0)
        {
            cout << i << " ";
            n /= i;
        }
    }
    if (n > 1)
        cout << n << nline;
}
bool primeSieve(int n)
{
    vector<bool> isPrime(n + 1, true);

    isPrime[0] = isPrime[1] = false;

    for (int i = 2; i <= n; i++)
    {
        if (isPrime[i])
        {
            for (int j = i * i; j <= n; j += i)
                isPrime[j] = false;
        }
    }

    return isPrime[n];

}
ll binPow(ll a, ll b)
{
    a %= MOD;
    ll res = 1;

    while (b > 0)
    {
        if (b & 1)
            res = res * a % MOD;
        a = a * a % MOD;
        b >>= 1;
    }
    return res;
}
ll gcd(ll a, ll b)
{
    while (b)
    {
        a %= b;
        swap(a, b);
    }
    return a;
}
ll lcm(ll a, ll b)
{
    return (a * b) / gcd(a, b);
}

void solve()
{
    ll a, b;
    cin >> a >> b;

    cout << gcd(a, b) << nline;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    ll T = 1;
    cin >> T;
    while (T--) 
    {
        solve();
    }

}
